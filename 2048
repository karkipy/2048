#!/bin/bash

allCells=(0 0 0 0 0 0 0 0 0)
cellSize=2
standardSize=3
standardChar='-----'
standardspace='     '
score=0
moves=0


leftPress() {
  for i in {0..2}
  do
    index=$(($i*3))
    leftIndex=$index
    middleIndex=$(($index + 1))
    rightIndex=$(($index + 2))
    if [ ${allCells[$rightIndex]} != 0 ]
    then
      if [ ${allCells[$rightIndex]} == ${allCells[$middleIndex]} ]
      then
        allCells[$middleIndex]=$((${allCells[$rightIndex]} * 2))
        allCells[$rightIndex]=0

      elif [ ${allCells[$middleIndex]} == 0 ]
      then
        allCells[$middleIndex]=${allCells[$rightIndex]}
        allCells[$rightIndex]=0
      fi;
    fi;


    if [ ${allCells[$middleIndex]} != 0 ]
    then
      if [ ${allCells[$middleIndex]} == ${allCells[$leftIndex]} ]
      then
        allCells[$leftIndex]=$((${allCells[$middleIndex]} * 2))
        allCells[$middleIndex]=0
      elif [ ${allCells[$leftIndex]} == 0 ]
      then
        allCells[$leftIndex]=${allCells[$middleIndex]}
        allCells[$middleIndex]=0
      fi;
    fi;
  done

  checkGameState
}


rightPress() {
  for i in {0..2}
  do
    index=$(($i*3))
    leftIndex=$index
    middleIndex=$(($index + 1))
    rightIndex=$(($index + 2))
    if [ ${allCells[$leftIndex]} != 0 ]
    then
      if [ ${allCells[$leftIndex]} == ${allCells[$middleIndex]} ]
      then
        allCells[$middleIndex]=$((${allCells[$leftIndex]} * 2))
        allCells[$leftIndex]=0

      elif [ ${allCells[$middleIndex]} == 0 ]
      then
        allCells[$middleIndex]=${allCells[$leftIndex]}
        allCells[$leftIndex]=0
      fi;
    fi;


    if [ ${allCells[$middleIndex]} != 0 ]
    then
      if [ ${allCells[$middleIndex]} == ${allCells[$rightIndex]} ]
      then
        allCells[$rightIndex]=$((${allCells[$middleIndex]} * 2))
        allCells[$middleIndex]=0
      elif [ ${allCells[$rightIndex]} == 0 ]
      then
        allCells[$rightIndex]=${allCells[$middleIndex]}
        allCells[$middleIndex]=0
      fi;
    fi;
  done
  checkGameState
}

upPress() {

    for i in {0..2}
    do
      index=$i
      firstRow=$index
      secondRow=$(($index + 3))
      thirdRow=$(($index + 6))



    if [ ${allCells[$thirdRow]} != 0 ]
    then
      if [ ${allCells[$thirdRow]} == ${allCells[$secondRow]} ]
      then
        allCells[$secondRow]=$((${allCells[$thirdRow]} * 2))
        allCells[$thirdRow]=0

      elif [ ${allCells[$secondRow]} == 0 ]
      then
        allCells[$secondRow]=${allCells[$thirdRow]}
        allCells[$thirdRow]=0
      fi;
    fi;


    if [ ${allCells[$secondRow]} != 0 ]
    then
      if [ ${allCells[$secondRow]} == ${allCells[$firstRow]} ]
      then
        allCells[$firstRow]=$((${allCells[$secondRow]} * 2))
        allCells[$secondRow]=0
      elif [ ${allCells[$firstRow]} == 0 ]
      then
        allCells[$firstRow]=${allCells[$secondRow]}
        allCells[$secondRow]=0
      fi;
    fi;
  done
  checkGameState
}

downPress() {

   for i in {0..2}
    do
      index=$i
      firstRow=$index
      secondRow=$(($index + 3))
      thirdRow=$(($index + 6))



    if [ ${allCells[$firstRow]} != 0 ]
    then
      if [ ${allCells[$firstRow]} == ${allCells[$secondRow]} ]
      then
        allCells[$secondRow]=$((${allCells[$firstRow]} * 2))
        allCells[$firstRow]=0

      elif [ ${allCells[$secondRow]} == 0 ]
      then
        allCells[$secondRow]=${allCells[$firstRow]}
        allCells[$firstRow]=0
      fi;
    fi;


    if [ ${allCells[$secondRow]} != 0 ]
    then
      if [ ${allCells[$secondRow]} == ${allCells[$thirdRow]} ]
      then
        allCells[$thirdRow]=$((${allCells[$secondRow]} * 2))
        allCells[$secondRow]=0
      elif [ ${allCells[$thirdRow]} == 0 ]
      then
        allCells[$thirdRow]=${allCells[$secondRow]}
        allCells[$secondRow]=0
      fi;
    fi;
  done
  checkGameState
}

keycode() {
  read -r -sn1 t
  case $t in
    A) upPress ;;
    B) downPress ;;
    C) rightPress ;;
    D) leftPress ;;
  esac
}


drawColumns() {
  start=$(($1*3))
  firstValue=${allCells[$start]}
  secondValue=${allCells[$start+1]}
  thirdValue=${allCells[$start+2]}

  if [ $firstValue == 0 ];
  then
    firstValue=''
  fi;

  if [ $secondValue == 0 ];
  then
    secondValue=''
  fi;

  if [ $thirdValue == 0 ];
  then
    thirdValue=''
  fi;

  standardLength=${#standardspace}
  firstDiff=${#firstValue}
  firstDiff=$(($standardLength - $firstDiff))
  firstDisplay=${standardspace:0:$firstDiff}$firstValue


  secondDiff=${#secondValue}
  secondDiff=$(($standardLength - $secondDiff))
  secondDisplay=${standardspace:0:$secondDiff}$secondValue


  thirdDiff=${#thirdValue}
  thirdDiff=$(($standardLength - $thirdDiff))
  thirdDisplay=${standardspace:0:$thirdDiff}$thirdValue

  echo "|$firstDisplay|$secondDisplay|$thirdDisplay|"
}


drawRows() {

  for i in {0..2}
  do
    echo " ${standardChar}" "${standardChar}" "${standardChar}"
    drawColumns $i
    echo " ${standardChar}" "${standardChar}" "${standardChar}"

  done
}


gameOver() {
  read -d '' -sn 1
  score=0
  moves=0
  for j in {0..8}
  do
    allCells[$j]=0
  done
  generateRandom
}

checkGameState() {
  moves=$(($moves + 1))
  count=0

  for j in {0..8}
  do
    if [ ${allCells[$j]} != 0 ]
    then
    count=$(($count+1))
    fi;

    if [ "${allCells[$j]}" -gt "$score" ];
    then
      score=${allCells[$j]}
    fi;

  done

  if [ $count == 9 ]
  then
    echo "Game Over Press any key to restart"
    gameOver
  else
    generateRandom
  fi;

}


generateRandom() {
  randomIndex=$(( ( RANDOM % 9 )  + 0 ))
    if [ ${allCells[$randomIndex]} != 0 ]
    then
      generateRandom
    else
      allCells[${randomIndex}]=2
  fi;
}

generateRandom

while true;
do
 clear
 echo 'Game Score : '$score ' Total Moves: '$moves
 echo ''
 drawRows
 keycode
done
